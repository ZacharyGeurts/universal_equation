#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;

layout(location = 0) rayPayloadEXT vec4 payload;

layout(push_constant) uniform PushConstants {
    mat4 viewProj;
    vec3 camPos;
    float wavePhase;
    float cycleProgress;
    float zoomFactor;
    float interactionStrength;
    float darkMatter;
    float darkEnergy;
} push;

void main() {
    vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = vec4(push.camPos, 1.0);
    vec4 target = inverse(push.viewProj) * vec4(d.x, d.y, 1.0, 1.0);
    vec4 direction = normalize(target - origin);

    float tMin = 0.1;
    float tMax = 100.0;

    payload = vec4(0.0, 0.0, 0.0, 1.0); // Initialize payload
    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, origin.xyz, tMin, direction.xyz, tMax, 0);

    // Call callable shader for additional effect (e.g., color modulation)
    //executeCallableEXT(0, 1);
}