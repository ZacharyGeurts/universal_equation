#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) writeonly uniform image2D outputImage;
layout(binding = 2, set = 0) uniform CameraProperties {
    mat4 viewInverse;
    mat4 projInverse;
} camera;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main() {
    ivec2 launchId = ivec2(gl_LaunchIDEXT.xy);
    vec2 pixelCenter = vec2(launchId) + vec2(0.5);
    vec2 inUV = pixelCenter / vec2(gl_LaunchSizeEXT.xy);
    vec2 ndc = 2.0 * inUV - 1.0;
    vec2 ndcFlipY = vec2(ndc.x, -ndc.y);

    vec4 origin = camera.viewInverse * vec4(0.0, 0.0, 0.0, 1.0);
    vec4 target = camera.projInverse * vec4(ndcFlipY, 0.0, 1.0);
    vec3 direction = normalize((camera.viewInverse * target).xyz - origin.xyz);

    float tMin = 0.001;
    float tMax = 1000.0;
    hitValue = vec3(0.0);

    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xFF, 0, 0, 0, origin.xyz, tMin, direction, tMax, 0);

    imageStore(outputImage, launchId, vec4(hitValue, 1.0));
}